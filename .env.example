# OBS_bot Environment Variables
# Copy this file to .env and fill in your actual values
# DO NOT commit .env file - it contains secrets!

# ============================================================================
# OBS WebSocket Connection
# ============================================================================
# IMPORTANT: The correct URL depends on WHERE OBS is running:
#
# SCENARIO 1: OBS on same Linux machine
#   OBS_WEBSOCKET_URL=ws://localhost:4455
#
# SCENARIO 2: WSL2 connecting to Windows OBS (MOST COMMON for Docker Desktop)
#   Step 1: Find Windows host IP from WSL2:
#     cat /etc/resolv.conf | grep nameserver | awk '{print $2}'
#   Step 2: Find Hyper-V adapter IP (in Windows PowerShell):
#     Get-NetIPAddress -AddressFamily IPv4 | Where-Object {$_.InterfaceAlias -like "*WSL*"} | Select IPAddress
#   Step 3: Test connectivity from WSL2:
#     timeout 3 bash -c 'cat < /dev/null > /dev/tcp/WINDOWS_IP:4455' && echo "OPEN" || echo "CLOSED"
#   Step 4: Use the IP that shows "OPEN" (usually the Hyper-V adapter IP like 172.x.x.1)
#
# SCENARIO 3: OBS on different machine/remote server
#   OBS_WEBSOCKET_URL=ws://REMOTE_IP:4455
#
# Example for WSL2 → Windows OBS:
# OBS_WEBSOCKET_URL=ws://172.x.x.1:4455
#
OBS_WEBSOCKET_URL=ws://localhost:4455
OBS_WEBSOCKET_PASSWORD=

# Twitch Streaming (REQUIRED for production)
# Get your stream key from: https://dashboard.twitch.tv/settings/stream
TWITCH_STREAM_KEY=

# Discord Alerting (REQUIRED for 24/7 operation per FR-043-045)
# Create webhook: Discord Server Settings → Integrations → Webhooks
DISCORD_WEBHOOK_URL=

# Health API Configuration (optional - defaults in config/settings.yaml)
# HEALTH_API_HOST=127.0.0.1
# HEALTH_API_PORT=8000

# Logging (optional - defaults in config/settings.yaml)
# LOG_LEVEL=INFO
# LOG_FORMAT=json
